/*
Spotify Web API

You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EpisodeRestrictionObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EpisodeRestrictionObject{}

// EpisodeRestrictionObject struct for EpisodeRestrictionObject
type EpisodeRestrictionObject struct {
	// The reason for the restriction. Supported values:<br> - `market` - The content item is not available in the given market.<br> - `product` - The content item is not available for the user's subscription type.<br> - `explicit` - The content item is explicit and the user's account is set to not play explicit content.<br> Additional reasons may be added in the future. **Note**: If you use this field, make sure that your application safely handles unknown values. 
	Reason *string `json:"reason,omitempty"`
}

// NewEpisodeRestrictionObject instantiates a new EpisodeRestrictionObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEpisodeRestrictionObject() *EpisodeRestrictionObject {
	this := EpisodeRestrictionObject{}
	return &this
}

// NewEpisodeRestrictionObjectWithDefaults instantiates a new EpisodeRestrictionObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEpisodeRestrictionObjectWithDefaults() *EpisodeRestrictionObject {
	this := EpisodeRestrictionObject{}
	return &this
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *EpisodeRestrictionObject) GetReason() string {
	if o == nil || isNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EpisodeRestrictionObject) GetReasonOk() (*string, bool) {
	if o == nil || isNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *EpisodeRestrictionObject) HasReason() bool {
	if o != nil && !isNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *EpisodeRestrictionObject) SetReason(v string) {
	o.Reason = &v
}

func (o EpisodeRestrictionObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EpisodeRestrictionObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	return toSerialize, nil
}

type NullableEpisodeRestrictionObject struct {
	value *EpisodeRestrictionObject
	isSet bool
}

func (v NullableEpisodeRestrictionObject) Get() *EpisodeRestrictionObject {
	return v.value
}

func (v *NullableEpisodeRestrictionObject) Set(val *EpisodeRestrictionObject) {
	v.value = val
	v.isSet = true
}

func (v NullableEpisodeRestrictionObject) IsSet() bool {
	return v.isSet
}

func (v *NullableEpisodeRestrictionObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEpisodeRestrictionObject(val *EpisodeRestrictionObject) *NullableEpisodeRestrictionObject {
	return &NullableEpisodeRestrictionObject{value: val, isSet: true}
}

func (v NullableEpisodeRestrictionObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEpisodeRestrictionObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


