/*
Spotify Web API

You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the SavedEpisodeObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SavedEpisodeObject{}

// SavedEpisodeObject struct for SavedEpisodeObject
type SavedEpisodeObject struct {
	// The date and time the episode was saved. Timestamps are returned in ISO 8601 format as Coordinated Universal Time (UTC) with a zero offset: YYYY-MM-DDTHH:MM:SSZ. 
	AddedAt *time.Time `json:"added_at,omitempty"`
	Episode *SavedEpisodeObjectEpisode `json:"episode,omitempty"`
}

// NewSavedEpisodeObject instantiates a new SavedEpisodeObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSavedEpisodeObject() *SavedEpisodeObject {
	this := SavedEpisodeObject{}
	return &this
}

// NewSavedEpisodeObjectWithDefaults instantiates a new SavedEpisodeObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSavedEpisodeObjectWithDefaults() *SavedEpisodeObject {
	this := SavedEpisodeObject{}
	return &this
}

// GetAddedAt returns the AddedAt field value if set, zero value otherwise.
func (o *SavedEpisodeObject) GetAddedAt() time.Time {
	if o == nil || isNil(o.AddedAt) {
		var ret time.Time
		return ret
	}
	return *o.AddedAt
}

// GetAddedAtOk returns a tuple with the AddedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SavedEpisodeObject) GetAddedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.AddedAt) {
		return nil, false
	}
	return o.AddedAt, true
}

// HasAddedAt returns a boolean if a field has been set.
func (o *SavedEpisodeObject) HasAddedAt() bool {
	if o != nil && !isNil(o.AddedAt) {
		return true
	}

	return false
}

// SetAddedAt gets a reference to the given time.Time and assigns it to the AddedAt field.
func (o *SavedEpisodeObject) SetAddedAt(v time.Time) {
	o.AddedAt = &v
}

// GetEpisode returns the Episode field value if set, zero value otherwise.
func (o *SavedEpisodeObject) GetEpisode() SavedEpisodeObjectEpisode {
	if o == nil || isNil(o.Episode) {
		var ret SavedEpisodeObjectEpisode
		return ret
	}
	return *o.Episode
}

// GetEpisodeOk returns a tuple with the Episode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SavedEpisodeObject) GetEpisodeOk() (*SavedEpisodeObjectEpisode, bool) {
	if o == nil || isNil(o.Episode) {
		return nil, false
	}
	return o.Episode, true
}

// HasEpisode returns a boolean if a field has been set.
func (o *SavedEpisodeObject) HasEpisode() bool {
	if o != nil && !isNil(o.Episode) {
		return true
	}

	return false
}

// SetEpisode gets a reference to the given SavedEpisodeObjectEpisode and assigns it to the Episode field.
func (o *SavedEpisodeObject) SetEpisode(v SavedEpisodeObjectEpisode) {
	o.Episode = &v
}

func (o SavedEpisodeObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SavedEpisodeObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AddedAt) {
		toSerialize["added_at"] = o.AddedAt
	}
	if !isNil(o.Episode) {
		toSerialize["episode"] = o.Episode
	}
	return toSerialize, nil
}

type NullableSavedEpisodeObject struct {
	value *SavedEpisodeObject
	isSet bool
}

func (v NullableSavedEpisodeObject) Get() *SavedEpisodeObject {
	return v.value
}

func (v *NullableSavedEpisodeObject) Set(val *SavedEpisodeObject) {
	v.value = val
	v.isSet = true
}

func (v NullableSavedEpisodeObject) IsSet() bool {
	return v.isSet
}

func (v *NullableSavedEpisodeObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSavedEpisodeObject(val *SavedEpisodeObject) *NullableSavedEpisodeObject {
	return &NullableSavedEpisodeObject{value: val, isSet: true}
}

func (v NullableSavedEpisodeObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSavedEpisodeObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


