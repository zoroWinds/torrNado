/*
Spotify Web API

You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ChapterObjectAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChapterObjectAllOf{}

// ChapterObjectAllOf struct for ChapterObjectAllOf
type ChapterObjectAllOf struct {
	Audiobook SimplifiedAudiobookObject `json:"audiobook"`
}

// NewChapterObjectAllOf instantiates a new ChapterObjectAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChapterObjectAllOf(audiobook SimplifiedAudiobookObject) *ChapterObjectAllOf {
	this := ChapterObjectAllOf{}
	this.Audiobook = audiobook
	return &this
}

// NewChapterObjectAllOfWithDefaults instantiates a new ChapterObjectAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChapterObjectAllOfWithDefaults() *ChapterObjectAllOf {
	this := ChapterObjectAllOf{}
	return &this
}

// GetAudiobook returns the Audiobook field value
func (o *ChapterObjectAllOf) GetAudiobook() SimplifiedAudiobookObject {
	if o == nil {
		var ret SimplifiedAudiobookObject
		return ret
	}

	return o.Audiobook
}

// GetAudiobookOk returns a tuple with the Audiobook field value
// and a boolean to check if the value has been set.
func (o *ChapterObjectAllOf) GetAudiobookOk() (*SimplifiedAudiobookObject, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Audiobook, true
}

// SetAudiobook sets field value
func (o *ChapterObjectAllOf) SetAudiobook(v SimplifiedAudiobookObject) {
	o.Audiobook = v
}

func (o ChapterObjectAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChapterObjectAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["audiobook"] = o.Audiobook
	return toSerialize, nil
}

type NullableChapterObjectAllOf struct {
	value *ChapterObjectAllOf
	isSet bool
}

func (v NullableChapterObjectAllOf) Get() *ChapterObjectAllOf {
	return v.value
}

func (v *NullableChapterObjectAllOf) Set(val *ChapterObjectAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableChapterObjectAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableChapterObjectAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChapterObjectAllOf(val *ChapterObjectAllOf) *NullableChapterObjectAllOf {
	return &NullableChapterObjectAllOf{value: val, isSet: true}
}

func (v NullableChapterObjectAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChapterObjectAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


