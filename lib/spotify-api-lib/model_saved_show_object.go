/*
Spotify Web API

You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the SavedShowObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SavedShowObject{}

// SavedShowObject struct for SavedShowObject
type SavedShowObject struct {
	// The date and time the show was saved. Timestamps are returned in ISO 8601 format as Coordinated Universal Time (UTC) with a zero offset: YYYY-MM-DDTHH:MM:SSZ. If the time is imprecise (for example, the date/time of an album release), an additional field indicates the precision; see for example, release_date in an album object. 
	AddedAt *time.Time `json:"added_at,omitempty"`
	Show *SavedShowObjectShow `json:"show,omitempty"`
}

// NewSavedShowObject instantiates a new SavedShowObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSavedShowObject() *SavedShowObject {
	this := SavedShowObject{}
	return &this
}

// NewSavedShowObjectWithDefaults instantiates a new SavedShowObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSavedShowObjectWithDefaults() *SavedShowObject {
	this := SavedShowObject{}
	return &this
}

// GetAddedAt returns the AddedAt field value if set, zero value otherwise.
func (o *SavedShowObject) GetAddedAt() time.Time {
	if o == nil || isNil(o.AddedAt) {
		var ret time.Time
		return ret
	}
	return *o.AddedAt
}

// GetAddedAtOk returns a tuple with the AddedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SavedShowObject) GetAddedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.AddedAt) {
		return nil, false
	}
	return o.AddedAt, true
}

// HasAddedAt returns a boolean if a field has been set.
func (o *SavedShowObject) HasAddedAt() bool {
	if o != nil && !isNil(o.AddedAt) {
		return true
	}

	return false
}

// SetAddedAt gets a reference to the given time.Time and assigns it to the AddedAt field.
func (o *SavedShowObject) SetAddedAt(v time.Time) {
	o.AddedAt = &v
}

// GetShow returns the Show field value if set, zero value otherwise.
func (o *SavedShowObject) GetShow() SavedShowObjectShow {
	if o == nil || isNil(o.Show) {
		var ret SavedShowObjectShow
		return ret
	}
	return *o.Show
}

// GetShowOk returns a tuple with the Show field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SavedShowObject) GetShowOk() (*SavedShowObjectShow, bool) {
	if o == nil || isNil(o.Show) {
		return nil, false
	}
	return o.Show, true
}

// HasShow returns a boolean if a field has been set.
func (o *SavedShowObject) HasShow() bool {
	if o != nil && !isNil(o.Show) {
		return true
	}

	return false
}

// SetShow gets a reference to the given SavedShowObjectShow and assigns it to the Show field.
func (o *SavedShowObject) SetShow(v SavedShowObjectShow) {
	o.Show = &v
}

func (o SavedShowObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SavedShowObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AddedAt) {
		toSerialize["added_at"] = o.AddedAt
	}
	if !isNil(o.Show) {
		toSerialize["show"] = o.Show
	}
	return toSerialize, nil
}

type NullableSavedShowObject struct {
	value *SavedShowObject
	isSet bool
}

func (v NullableSavedShowObject) Get() *SavedShowObject {
	return v.value
}

func (v *NullableSavedShowObject) Set(val *SavedShowObject) {
	v.value = val
	v.isSet = true
}

func (v NullableSavedShowObject) IsSet() bool {
	return v.isSet
}

func (v *NullableSavedShowObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSavedShowObject(val *SavedShowObject) *NullableSavedShowObject {
	return &NullableSavedShowObject{value: val, isSet: true}
}

func (v NullableSavedShowObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSavedShowObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


