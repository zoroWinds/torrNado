/*
Spotify Web API

You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AudioAnalysisObjectMeta type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AudioAnalysisObjectMeta{}

// AudioAnalysisObjectMeta struct for AudioAnalysisObjectMeta
type AudioAnalysisObjectMeta struct {
	// The version of the Analyzer used to analyze this track.
	AnalyzerVersion *string `json:"analyzer_version,omitempty"`
	// The platform used to read the track's audio data.
	Platform *string `json:"platform,omitempty"`
	// A detailed status code for this track. If analysis data is missing, this code may explain why.
	DetailedStatus *string `json:"detailed_status,omitempty"`
	// The return code of the analyzer process. 0 if successful, 1 if any errors occurred.
	StatusCode *int32 `json:"status_code,omitempty"`
	// The Unix timestamp (in seconds) at which this track was analyzed.
	Timestamp *int32 `json:"timestamp,omitempty"`
	// The amount of time taken to analyze this track.
	AnalysisTime *float32 `json:"analysis_time,omitempty"`
	// The method used to read the track's audio data.
	InputProcess *string `json:"input_process,omitempty"`
}

// NewAudioAnalysisObjectMeta instantiates a new AudioAnalysisObjectMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAudioAnalysisObjectMeta() *AudioAnalysisObjectMeta {
	this := AudioAnalysisObjectMeta{}
	return &this
}

// NewAudioAnalysisObjectMetaWithDefaults instantiates a new AudioAnalysisObjectMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAudioAnalysisObjectMetaWithDefaults() *AudioAnalysisObjectMeta {
	this := AudioAnalysisObjectMeta{}
	return &this
}

// GetAnalyzerVersion returns the AnalyzerVersion field value if set, zero value otherwise.
func (o *AudioAnalysisObjectMeta) GetAnalyzerVersion() string {
	if o == nil || isNil(o.AnalyzerVersion) {
		var ret string
		return ret
	}
	return *o.AnalyzerVersion
}

// GetAnalyzerVersionOk returns a tuple with the AnalyzerVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioAnalysisObjectMeta) GetAnalyzerVersionOk() (*string, bool) {
	if o == nil || isNil(o.AnalyzerVersion) {
		return nil, false
	}
	return o.AnalyzerVersion, true
}

// HasAnalyzerVersion returns a boolean if a field has been set.
func (o *AudioAnalysisObjectMeta) HasAnalyzerVersion() bool {
	if o != nil && !isNil(o.AnalyzerVersion) {
		return true
	}

	return false
}

// SetAnalyzerVersion gets a reference to the given string and assigns it to the AnalyzerVersion field.
func (o *AudioAnalysisObjectMeta) SetAnalyzerVersion(v string) {
	o.AnalyzerVersion = &v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *AudioAnalysisObjectMeta) GetPlatform() string {
	if o == nil || isNil(o.Platform) {
		var ret string
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioAnalysisObjectMeta) GetPlatformOk() (*string, bool) {
	if o == nil || isNil(o.Platform) {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *AudioAnalysisObjectMeta) HasPlatform() bool {
	if o != nil && !isNil(o.Platform) {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given string and assigns it to the Platform field.
func (o *AudioAnalysisObjectMeta) SetPlatform(v string) {
	o.Platform = &v
}

// GetDetailedStatus returns the DetailedStatus field value if set, zero value otherwise.
func (o *AudioAnalysisObjectMeta) GetDetailedStatus() string {
	if o == nil || isNil(o.DetailedStatus) {
		var ret string
		return ret
	}
	return *o.DetailedStatus
}

// GetDetailedStatusOk returns a tuple with the DetailedStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioAnalysisObjectMeta) GetDetailedStatusOk() (*string, bool) {
	if o == nil || isNil(o.DetailedStatus) {
		return nil, false
	}
	return o.DetailedStatus, true
}

// HasDetailedStatus returns a boolean if a field has been set.
func (o *AudioAnalysisObjectMeta) HasDetailedStatus() bool {
	if o != nil && !isNil(o.DetailedStatus) {
		return true
	}

	return false
}

// SetDetailedStatus gets a reference to the given string and assigns it to the DetailedStatus field.
func (o *AudioAnalysisObjectMeta) SetDetailedStatus(v string) {
	o.DetailedStatus = &v
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *AudioAnalysisObjectMeta) GetStatusCode() int32 {
	if o == nil || isNil(o.StatusCode) {
		var ret int32
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioAnalysisObjectMeta) GetStatusCodeOk() (*int32, bool) {
	if o == nil || isNil(o.StatusCode) {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *AudioAnalysisObjectMeta) HasStatusCode() bool {
	if o != nil && !isNil(o.StatusCode) {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given int32 and assigns it to the StatusCode field.
func (o *AudioAnalysisObjectMeta) SetStatusCode(v int32) {
	o.StatusCode = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *AudioAnalysisObjectMeta) GetTimestamp() int32 {
	if o == nil || isNil(o.Timestamp) {
		var ret int32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioAnalysisObjectMeta) GetTimestampOk() (*int32, bool) {
	if o == nil || isNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *AudioAnalysisObjectMeta) HasTimestamp() bool {
	if o != nil && !isNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int32 and assigns it to the Timestamp field.
func (o *AudioAnalysisObjectMeta) SetTimestamp(v int32) {
	o.Timestamp = &v
}

// GetAnalysisTime returns the AnalysisTime field value if set, zero value otherwise.
func (o *AudioAnalysisObjectMeta) GetAnalysisTime() float32 {
	if o == nil || isNil(o.AnalysisTime) {
		var ret float32
		return ret
	}
	return *o.AnalysisTime
}

// GetAnalysisTimeOk returns a tuple with the AnalysisTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioAnalysisObjectMeta) GetAnalysisTimeOk() (*float32, bool) {
	if o == nil || isNil(o.AnalysisTime) {
		return nil, false
	}
	return o.AnalysisTime, true
}

// HasAnalysisTime returns a boolean if a field has been set.
func (o *AudioAnalysisObjectMeta) HasAnalysisTime() bool {
	if o != nil && !isNil(o.AnalysisTime) {
		return true
	}

	return false
}

// SetAnalysisTime gets a reference to the given float32 and assigns it to the AnalysisTime field.
func (o *AudioAnalysisObjectMeta) SetAnalysisTime(v float32) {
	o.AnalysisTime = &v
}

// GetInputProcess returns the InputProcess field value if set, zero value otherwise.
func (o *AudioAnalysisObjectMeta) GetInputProcess() string {
	if o == nil || isNil(o.InputProcess) {
		var ret string
		return ret
	}
	return *o.InputProcess
}

// GetInputProcessOk returns a tuple with the InputProcess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioAnalysisObjectMeta) GetInputProcessOk() (*string, bool) {
	if o == nil || isNil(o.InputProcess) {
		return nil, false
	}
	return o.InputProcess, true
}

// HasInputProcess returns a boolean if a field has been set.
func (o *AudioAnalysisObjectMeta) HasInputProcess() bool {
	if o != nil && !isNil(o.InputProcess) {
		return true
	}

	return false
}

// SetInputProcess gets a reference to the given string and assigns it to the InputProcess field.
func (o *AudioAnalysisObjectMeta) SetInputProcess(v string) {
	o.InputProcess = &v
}

func (o AudioAnalysisObjectMeta) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AudioAnalysisObjectMeta) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AnalyzerVersion) {
		toSerialize["analyzer_version"] = o.AnalyzerVersion
	}
	if !isNil(o.Platform) {
		toSerialize["platform"] = o.Platform
	}
	if !isNil(o.DetailedStatus) {
		toSerialize["detailed_status"] = o.DetailedStatus
	}
	if !isNil(o.StatusCode) {
		toSerialize["status_code"] = o.StatusCode
	}
	if !isNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !isNil(o.AnalysisTime) {
		toSerialize["analysis_time"] = o.AnalysisTime
	}
	if !isNil(o.InputProcess) {
		toSerialize["input_process"] = o.InputProcess
	}
	return toSerialize, nil
}

type NullableAudioAnalysisObjectMeta struct {
	value *AudioAnalysisObjectMeta
	isSet bool
}

func (v NullableAudioAnalysisObjectMeta) Get() *AudioAnalysisObjectMeta {
	return v.value
}

func (v *NullableAudioAnalysisObjectMeta) Set(val *AudioAnalysisObjectMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableAudioAnalysisObjectMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableAudioAnalysisObjectMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAudioAnalysisObjectMeta(val *AudioAnalysisObjectMeta) *NullableAudioAnalysisObjectMeta {
	return &NullableAudioAnalysisObjectMeta{value: val, isSet: true}
}

func (v NullableAudioAnalysisObjectMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAudioAnalysisObjectMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


