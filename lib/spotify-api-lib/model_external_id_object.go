/*
Spotify Web API

You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExternalIdObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalIdObject{}

// ExternalIdObject struct for ExternalIdObject
type ExternalIdObject struct {
	// [International Standard Recording Code](http://en.wikipedia.org/wiki/International_Standard_Recording_Code) 
	Isrc *string `json:"isrc,omitempty"`
	// [International Article Number](http://en.wikipedia.org/wiki/International_Article_Number_%28EAN%29) 
	Ean *string `json:"ean,omitempty"`
	// [Universal Product Code](http://en.wikipedia.org/wiki/Universal_Product_Code) 
	Upc *string `json:"upc,omitempty"`
}

// NewExternalIdObject instantiates a new ExternalIdObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalIdObject() *ExternalIdObject {
	this := ExternalIdObject{}
	return &this
}

// NewExternalIdObjectWithDefaults instantiates a new ExternalIdObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalIdObjectWithDefaults() *ExternalIdObject {
	this := ExternalIdObject{}
	return &this
}

// GetIsrc returns the Isrc field value if set, zero value otherwise.
func (o *ExternalIdObject) GetIsrc() string {
	if o == nil || isNil(o.Isrc) {
		var ret string
		return ret
	}
	return *o.Isrc
}

// GetIsrcOk returns a tuple with the Isrc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalIdObject) GetIsrcOk() (*string, bool) {
	if o == nil || isNil(o.Isrc) {
		return nil, false
	}
	return o.Isrc, true
}

// HasIsrc returns a boolean if a field has been set.
func (o *ExternalIdObject) HasIsrc() bool {
	if o != nil && !isNil(o.Isrc) {
		return true
	}

	return false
}

// SetIsrc gets a reference to the given string and assigns it to the Isrc field.
func (o *ExternalIdObject) SetIsrc(v string) {
	o.Isrc = &v
}

// GetEan returns the Ean field value if set, zero value otherwise.
func (o *ExternalIdObject) GetEan() string {
	if o == nil || isNil(o.Ean) {
		var ret string
		return ret
	}
	return *o.Ean
}

// GetEanOk returns a tuple with the Ean field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalIdObject) GetEanOk() (*string, bool) {
	if o == nil || isNil(o.Ean) {
		return nil, false
	}
	return o.Ean, true
}

// HasEan returns a boolean if a field has been set.
func (o *ExternalIdObject) HasEan() bool {
	if o != nil && !isNil(o.Ean) {
		return true
	}

	return false
}

// SetEan gets a reference to the given string and assigns it to the Ean field.
func (o *ExternalIdObject) SetEan(v string) {
	o.Ean = &v
}

// GetUpc returns the Upc field value if set, zero value otherwise.
func (o *ExternalIdObject) GetUpc() string {
	if o == nil || isNil(o.Upc) {
		var ret string
		return ret
	}
	return *o.Upc
}

// GetUpcOk returns a tuple with the Upc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalIdObject) GetUpcOk() (*string, bool) {
	if o == nil || isNil(o.Upc) {
		return nil, false
	}
	return o.Upc, true
}

// HasUpc returns a boolean if a field has been set.
func (o *ExternalIdObject) HasUpc() bool {
	if o != nil && !isNil(o.Upc) {
		return true
	}

	return false
}

// SetUpc gets a reference to the given string and assigns it to the Upc field.
func (o *ExternalIdObject) SetUpc(v string) {
	o.Upc = &v
}

func (o ExternalIdObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalIdObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Isrc) {
		toSerialize["isrc"] = o.Isrc
	}
	if !isNil(o.Ean) {
		toSerialize["ean"] = o.Ean
	}
	if !isNil(o.Upc) {
		toSerialize["upc"] = o.Upc
	}
	return toSerialize, nil
}

type NullableExternalIdObject struct {
	value *ExternalIdObject
	isSet bool
}

func (v NullableExternalIdObject) Get() *ExternalIdObject {
	return v.value
}

func (v *NullableExternalIdObject) Set(val *ExternalIdObject) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalIdObject) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalIdObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalIdObject(val *ExternalIdObject) *NullableExternalIdObject {
	return &NullableExternalIdObject{value: val, isSet: true}
}

func (v NullableExternalIdObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalIdObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


