/*
Spotify Web API

You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ImageObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageObject{}

// ImageObject struct for ImageObject
type ImageObject struct {
	// The source URL of the image. 
	Url string `json:"url"`
	// The image height in pixels. 
	Height NullableInt32 `json:"height"`
	// The image width in pixels. 
	Width NullableInt32 `json:"width"`
}

// NewImageObject instantiates a new ImageObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageObject(url string, height NullableInt32, width NullableInt32) *ImageObject {
	this := ImageObject{}
	this.Url = url
	this.Height = height
	this.Width = width
	return &this
}

// NewImageObjectWithDefaults instantiates a new ImageObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageObjectWithDefaults() *ImageObject {
	this := ImageObject{}
	return &this
}

// GetUrl returns the Url field value
func (o *ImageObject) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ImageObject) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *ImageObject) SetUrl(v string) {
	o.Url = v
}

// GetHeight returns the Height field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *ImageObject) GetHeight() int32 {
	if o == nil || o.Height.Get() == nil {
		var ret int32
		return ret
	}

	return *o.Height.Get()
}

// GetHeightOk returns a tuple with the Height field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageObject) GetHeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Height.Get(), o.Height.IsSet()
}

// SetHeight sets field value
func (o *ImageObject) SetHeight(v int32) {
	o.Height.Set(&v)
}

// GetWidth returns the Width field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *ImageObject) GetWidth() int32 {
	if o == nil || o.Width.Get() == nil {
		var ret int32
		return ret
	}

	return *o.Width.Get()
}

// GetWidthOk returns a tuple with the Width field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageObject) GetWidthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Width.Get(), o.Width.IsSet()
}

// SetWidth sets field value
func (o *ImageObject) SetWidth(v int32) {
	o.Width.Set(&v)
}

func (o ImageObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImageObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	toSerialize["height"] = o.Height.Get()
	toSerialize["width"] = o.Width.Get()
	return toSerialize, nil
}

type NullableImageObject struct {
	value *ImageObject
	isSet bool
}

func (v NullableImageObject) Get() *ImageObject {
	return v.value
}

func (v *NullableImageObject) Set(val *ImageObject) {
	v.value = val
	v.isSet = true
}

func (v NullableImageObject) IsSet() bool {
	return v.isSet
}

func (v *NullableImageObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageObject(val *ImageObject) *NullableImageObject {
	return &NullableImageObject{value: val, isSet: true}
}

func (v NullableImageObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


