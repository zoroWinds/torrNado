/*
Spotify Web API

You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Search200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Search200Response{}

// Search200Response struct for Search200Response
type Search200Response struct {
	Tracks *PagingObject `json:"tracks,omitempty"`
	Artists *PagingObject `json:"artists,omitempty"`
	Albums *PagingObject `json:"albums,omitempty"`
	Playlists *PagingObject `json:"playlists,omitempty"`
	Shows *PagingObject `json:"shows,omitempty"`
	Episodes *PagingObject `json:"episodes,omitempty"`
	Audiobooks *PagingObject `json:"audiobooks,omitempty"`
}

// NewSearch200Response instantiates a new Search200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearch200Response() *Search200Response {
	this := Search200Response{}
	return &this
}

// NewSearch200ResponseWithDefaults instantiates a new Search200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearch200ResponseWithDefaults() *Search200Response {
	this := Search200Response{}
	return &this
}

// GetTracks returns the Tracks field value if set, zero value otherwise.
func (o *Search200Response) GetTracks() PagingObject {
	if o == nil || isNil(o.Tracks) {
		var ret PagingObject
		return ret
	}
	return *o.Tracks
}

// GetTracksOk returns a tuple with the Tracks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Search200Response) GetTracksOk() (*PagingObject, bool) {
	if o == nil || isNil(o.Tracks) {
		return nil, false
	}
	return o.Tracks, true
}

// HasTracks returns a boolean if a field has been set.
func (o *Search200Response) HasTracks() bool {
	if o != nil && !isNil(o.Tracks) {
		return true
	}

	return false
}

// SetTracks gets a reference to the given PagingObject and assigns it to the Tracks field.
func (o *Search200Response) SetTracks(v PagingObject) {
	o.Tracks = &v
}

// GetArtists returns the Artists field value if set, zero value otherwise.
func (o *Search200Response) GetArtists() PagingObject {
	if o == nil || isNil(o.Artists) {
		var ret PagingObject
		return ret
	}
	return *o.Artists
}

// GetArtistsOk returns a tuple with the Artists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Search200Response) GetArtistsOk() (*PagingObject, bool) {
	if o == nil || isNil(o.Artists) {
		return nil, false
	}
	return o.Artists, true
}

// HasArtists returns a boolean if a field has been set.
func (o *Search200Response) HasArtists() bool {
	if o != nil && !isNil(o.Artists) {
		return true
	}

	return false
}

// SetArtists gets a reference to the given PagingObject and assigns it to the Artists field.
func (o *Search200Response) SetArtists(v PagingObject) {
	o.Artists = &v
}

// GetAlbums returns the Albums field value if set, zero value otherwise.
func (o *Search200Response) GetAlbums() PagingObject {
	if o == nil || isNil(o.Albums) {
		var ret PagingObject
		return ret
	}
	return *o.Albums
}

// GetAlbumsOk returns a tuple with the Albums field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Search200Response) GetAlbumsOk() (*PagingObject, bool) {
	if o == nil || isNil(o.Albums) {
		return nil, false
	}
	return o.Albums, true
}

// HasAlbums returns a boolean if a field has been set.
func (o *Search200Response) HasAlbums() bool {
	if o != nil && !isNil(o.Albums) {
		return true
	}

	return false
}

// SetAlbums gets a reference to the given PagingObject and assigns it to the Albums field.
func (o *Search200Response) SetAlbums(v PagingObject) {
	o.Albums = &v
}

// GetPlaylists returns the Playlists field value if set, zero value otherwise.
func (o *Search200Response) GetPlaylists() PagingObject {
	if o == nil || isNil(o.Playlists) {
		var ret PagingObject
		return ret
	}
	return *o.Playlists
}

// GetPlaylistsOk returns a tuple with the Playlists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Search200Response) GetPlaylistsOk() (*PagingObject, bool) {
	if o == nil || isNil(o.Playlists) {
		return nil, false
	}
	return o.Playlists, true
}

// HasPlaylists returns a boolean if a field has been set.
func (o *Search200Response) HasPlaylists() bool {
	if o != nil && !isNil(o.Playlists) {
		return true
	}

	return false
}

// SetPlaylists gets a reference to the given PagingObject and assigns it to the Playlists field.
func (o *Search200Response) SetPlaylists(v PagingObject) {
	o.Playlists = &v
}

// GetShows returns the Shows field value if set, zero value otherwise.
func (o *Search200Response) GetShows() PagingObject {
	if o == nil || isNil(o.Shows) {
		var ret PagingObject
		return ret
	}
	return *o.Shows
}

// GetShowsOk returns a tuple with the Shows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Search200Response) GetShowsOk() (*PagingObject, bool) {
	if o == nil || isNil(o.Shows) {
		return nil, false
	}
	return o.Shows, true
}

// HasShows returns a boolean if a field has been set.
func (o *Search200Response) HasShows() bool {
	if o != nil && !isNil(o.Shows) {
		return true
	}

	return false
}

// SetShows gets a reference to the given PagingObject and assigns it to the Shows field.
func (o *Search200Response) SetShows(v PagingObject) {
	o.Shows = &v
}

// GetEpisodes returns the Episodes field value if set, zero value otherwise.
func (o *Search200Response) GetEpisodes() PagingObject {
	if o == nil || isNil(o.Episodes) {
		var ret PagingObject
		return ret
	}
	return *o.Episodes
}

// GetEpisodesOk returns a tuple with the Episodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Search200Response) GetEpisodesOk() (*PagingObject, bool) {
	if o == nil || isNil(o.Episodes) {
		return nil, false
	}
	return o.Episodes, true
}

// HasEpisodes returns a boolean if a field has been set.
func (o *Search200Response) HasEpisodes() bool {
	if o != nil && !isNil(o.Episodes) {
		return true
	}

	return false
}

// SetEpisodes gets a reference to the given PagingObject and assigns it to the Episodes field.
func (o *Search200Response) SetEpisodes(v PagingObject) {
	o.Episodes = &v
}

// GetAudiobooks returns the Audiobooks field value if set, zero value otherwise.
func (o *Search200Response) GetAudiobooks() PagingObject {
	if o == nil || isNil(o.Audiobooks) {
		var ret PagingObject
		return ret
	}
	return *o.Audiobooks
}

// GetAudiobooksOk returns a tuple with the Audiobooks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Search200Response) GetAudiobooksOk() (*PagingObject, bool) {
	if o == nil || isNil(o.Audiobooks) {
		return nil, false
	}
	return o.Audiobooks, true
}

// HasAudiobooks returns a boolean if a field has been set.
func (o *Search200Response) HasAudiobooks() bool {
	if o != nil && !isNil(o.Audiobooks) {
		return true
	}

	return false
}

// SetAudiobooks gets a reference to the given PagingObject and assigns it to the Audiobooks field.
func (o *Search200Response) SetAudiobooks(v PagingObject) {
	o.Audiobooks = &v
}

func (o Search200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Search200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Tracks) {
		toSerialize["tracks"] = o.Tracks
	}
	if !isNil(o.Artists) {
		toSerialize["artists"] = o.Artists
	}
	if !isNil(o.Albums) {
		toSerialize["albums"] = o.Albums
	}
	if !isNil(o.Playlists) {
		toSerialize["playlists"] = o.Playlists
	}
	if !isNil(o.Shows) {
		toSerialize["shows"] = o.Shows
	}
	if !isNil(o.Episodes) {
		toSerialize["episodes"] = o.Episodes
	}
	if !isNil(o.Audiobooks) {
		toSerialize["audiobooks"] = o.Audiobooks
	}
	return toSerialize, nil
}

type NullableSearch200Response struct {
	value *Search200Response
	isSet bool
}

func (v NullableSearch200Response) Get() *Search200Response {
	return v.value
}

func (v *NullableSearch200Response) Set(val *Search200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableSearch200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableSearch200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearch200Response(val *Search200Response) *NullableSearch200Response {
	return &NullableSearch200Response{value: val, isSet: true}
}

func (v NullableSearch200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearch200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


