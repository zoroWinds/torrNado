/*
Spotify Web API

You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ChangePlaylistDetailsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChangePlaylistDetailsRequest{}

// ChangePlaylistDetailsRequest struct for ChangePlaylistDetailsRequest
type ChangePlaylistDetailsRequest struct {
	// The new name for the playlist, for example `\"My New Playlist Title\"` 
	Name *string `json:"name,omitempty"`
	// If `true` the playlist will be public, if `false` it will be private. 
	Public *bool `json:"public,omitempty"`
	// If `true`, the playlist will become collaborative and other users will be able to modify the playlist in their Spotify client. <br> _**Note**: You can only set `collaborative` to `true` on non-public playlists._ 
	Collaborative *bool `json:"collaborative,omitempty"`
	// Value for playlist description as displayed in Spotify Clients and in the Web API. 
	Description *string `json:"description,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ChangePlaylistDetailsRequest ChangePlaylistDetailsRequest

// NewChangePlaylistDetailsRequest instantiates a new ChangePlaylistDetailsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChangePlaylistDetailsRequest() *ChangePlaylistDetailsRequest {
	this := ChangePlaylistDetailsRequest{}
	return &this
}

// NewChangePlaylistDetailsRequestWithDefaults instantiates a new ChangePlaylistDetailsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChangePlaylistDetailsRequestWithDefaults() *ChangePlaylistDetailsRequest {
	this := ChangePlaylistDetailsRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ChangePlaylistDetailsRequest) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangePlaylistDetailsRequest) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ChangePlaylistDetailsRequest) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ChangePlaylistDetailsRequest) SetName(v string) {
	o.Name = &v
}

// GetPublic returns the Public field value if set, zero value otherwise.
func (o *ChangePlaylistDetailsRequest) GetPublic() bool {
	if o == nil || isNil(o.Public) {
		var ret bool
		return ret
	}
	return *o.Public
}

// GetPublicOk returns a tuple with the Public field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangePlaylistDetailsRequest) GetPublicOk() (*bool, bool) {
	if o == nil || isNil(o.Public) {
		return nil, false
	}
	return o.Public, true
}

// HasPublic returns a boolean if a field has been set.
func (o *ChangePlaylistDetailsRequest) HasPublic() bool {
	if o != nil && !isNil(o.Public) {
		return true
	}

	return false
}

// SetPublic gets a reference to the given bool and assigns it to the Public field.
func (o *ChangePlaylistDetailsRequest) SetPublic(v bool) {
	o.Public = &v
}

// GetCollaborative returns the Collaborative field value if set, zero value otherwise.
func (o *ChangePlaylistDetailsRequest) GetCollaborative() bool {
	if o == nil || isNil(o.Collaborative) {
		var ret bool
		return ret
	}
	return *o.Collaborative
}

// GetCollaborativeOk returns a tuple with the Collaborative field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangePlaylistDetailsRequest) GetCollaborativeOk() (*bool, bool) {
	if o == nil || isNil(o.Collaborative) {
		return nil, false
	}
	return o.Collaborative, true
}

// HasCollaborative returns a boolean if a field has been set.
func (o *ChangePlaylistDetailsRequest) HasCollaborative() bool {
	if o != nil && !isNil(o.Collaborative) {
		return true
	}

	return false
}

// SetCollaborative gets a reference to the given bool and assigns it to the Collaborative field.
func (o *ChangePlaylistDetailsRequest) SetCollaborative(v bool) {
	o.Collaborative = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ChangePlaylistDetailsRequest) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangePlaylistDetailsRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ChangePlaylistDetailsRequest) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ChangePlaylistDetailsRequest) SetDescription(v string) {
	o.Description = &v
}

func (o ChangePlaylistDetailsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChangePlaylistDetailsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Public) {
		toSerialize["public"] = o.Public
	}
	if !isNil(o.Collaborative) {
		toSerialize["collaborative"] = o.Collaborative
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ChangePlaylistDetailsRequest) UnmarshalJSON(bytes []byte) (err error) {
	varChangePlaylistDetailsRequest := _ChangePlaylistDetailsRequest{}

	if err = json.Unmarshal(bytes, &varChangePlaylistDetailsRequest); err == nil {
		*o = ChangePlaylistDetailsRequest(varChangePlaylistDetailsRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "public")
		delete(additionalProperties, "collaborative")
		delete(additionalProperties, "description")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableChangePlaylistDetailsRequest struct {
	value *ChangePlaylistDetailsRequest
	isSet bool
}

func (v NullableChangePlaylistDetailsRequest) Get() *ChangePlaylistDetailsRequest {
	return v.value
}

func (v *NullableChangePlaylistDetailsRequest) Set(val *ChangePlaylistDetailsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableChangePlaylistDetailsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableChangePlaylistDetailsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChangePlaylistDetailsRequest(val *ChangePlaylistDetailsRequest) *NullableChangePlaylistDetailsRequest {
	return &NullableChangePlaylistDetailsRequest{value: val, isSet: true}
}

func (v NullableChangePlaylistDetailsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChangePlaylistDetailsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


